/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package myproject;

import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;

/**
 *
 * @author Rajesh Karmaker
 */
public class ClientWindow extends javax.swing.JFrame implements Runnable{

    /**
     * Creates new form Client
     */
    
    
    private Client C;
    private Thread listen,run;
    private boolean running = false;
    public ClientWindow(String name,String Ip,int port) {
        
        C = new Client(name,Ip,port);
        boolean connect = C.openConnection(Ip);
        if(!connect){
            System.err.println("Connection failed.");
            console("Connection failed.");
            return;                                                                                                                                                                                                                                                                                                                                                        
        }
        initComponents();   
        
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e){
                System.out.println("Closed!");
                String disconnect = "/d/" +C.getID()+"/e/";
                C.send(disconnect.getBytes());
                running = false;
                C.close();
            }
        });
        
        MessageField.requestFocusInWindow();
        
        
        console("Attempting a connection to "+Ip+" : "+port+" User:"+name);
        String con  = "/c/"+name;
        C.send(con.getBytes());
        running = true;
        run = new Thread(this,"running");       
        run.start();
    }
    @Override
    public void run(){
        
        listen();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TextHistoryArea = new javax.swing.JTextArea();
        MessageField = new javax.swing.JTextField();
        SendButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextHistoryArea.setEditable(false);
        TextHistoryArea.setColumns(20);
        TextHistoryArea.setRows(5);
        jScrollPane1.setViewportView(TextHistoryArea);

        MessageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MessageFieldActionPerformed(evt);
            }
        });
        MessageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MessageFieldKeyPressed(evt);
            }
        });

        SendButton.setText("Send");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Disconnect");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MessageField, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MessageField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MessageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MessageFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_MessageFieldActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        // TODO add your handling code here:
        send(MessageField.getText());
    }//GEN-LAST:event_SendButtonActionPerformed

    private void MessageFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MessageFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            send(MessageField.getText());
            
        }
    }//GEN-LAST:event_MessageFieldKeyPressed

    public void listen(){
        listen = new Thread("Listen"){
            @Override
            public void run(){
                
                while(running){
                    System.out.println("IN Listen Thread....");
                    String message = C.receive();
                    System.out.println(message);
                    if(message.startsWith("/c/")){
                        
                        //System.out.println(message);
                        int id=Integer.parseInt(message.split("/c/|/e/")[1]);
                        //System.out.println(id);
                        C.setID(id);
                        //System.out.println(message.substring(3, message.length()));
                        console("Succesfully connected to server! ID "+C.getID() ); 
                    }
                    else if(message.startsWith("/m/")){
                        
                        String text = message.split("/m/|/e/")[1];
                        System.out.println("Message: "+message);
                        console(text);
                    }
                    else{
                        System.out.println(message);
                    }
                }
            }
        };
        listen.start();
    }
    
    private void send(String message){
        message = C.getName()+":"+message;
        //TextHistoryArea.append(message+"\n");
        message = "/m/"+message;
        C.send(message.getBytes());
        MessageField.setText("");
    }
    
    public void console(String message){
        TextHistoryArea.append(message+"\n");
        MessageField.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MessageField;
    private javax.swing.JButton SendButton;
    private javax.swing.JTextArea TextHistoryArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
